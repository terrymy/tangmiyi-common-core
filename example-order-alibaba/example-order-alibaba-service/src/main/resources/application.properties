spring.cloud.stream.rocketmq.binder.name-server=${spring.rocketmq.host}:${spring.rocketmq.port}

spring.cloud.stream.bindings.output.destination=stream-test-topic
spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.rocketmq.bindings.output.producer.group=binder-output-group
spring.cloud.stream.rocketmq.bindings.output.producer.sync=true

spring.cloud.stream.bindings.input.destination=stream-test-topic
spring.cloud.stream.bindings.input.content-type=application/json
spring.cloud.stream.bindings.input.group=stream-test-group
#spring.cloud.stream.bindings.input.consumer.concurrency=20
# 是否开启消费，默认为 true
spring.cloud.stream.rocketmq.bindings.input.consumer.enabled=true
# 是否使用广播消费(true每个消费者全量消费)，默认为 false，表示集群消息(false均摊消费)，均不保证顺序消费
spring.cloud.stream.rocketmq.bindings.input.consumer.broadcasting=false
#spring.cloud.stream.rocketmq.bindings.input.consumer.tags=tagObj



#配置选项
#RocketMQ Binder Properties
#spring.cloud.stream.rocketmq.binder.name-server
#RocketMQ NameServer 地址(老版本使用 namesrv-addr 配置项)。Default: 127.0.0.1:9876.
#spring.cloud.stream.rocketmq.binder.access-key
#阿里云账号 AccessKey。Default: null.
#spring.cloud.stream.rocketmq.binder.secret-key
#阿里云账号 SecretKey。Default: null.
#spring.cloud.stream.rocketmq.binder.enable-msg-trace
#是否为 Producer 和 Consumer 开启消息轨迹功能Default: true.
#spring.cloud.stream.rocketmq.binder.customized-trace-topic
#消息轨迹开启后存储的 topic 名称。Default: RMQ_SYS_TRACE_TOPIC.
#RocketMQ Consumer Properties
#下面的这些配置是以 spring.cloud.stream.rocketmq.bindings…consumer. 为前缀的 RocketMQ Consumer 相关的配置。
#
#enable
#是否启用 Consumer。默认值: true.
#tags
#Consumer 基于 TAGS 订阅，多个 tag 以 || 分割。默认值: empty.
#sql
#Consumer 基于 SQL 订阅。默认值: empty.
#broadcasting
#Consumer 是否是广播消费模式。如果想让所有的订阅者都能接收到消息，可以使用广播模式。默认值: false.
#orderly
#Consumer 是否同步消费消息模式。默认值: false.
#delayLevelWhenNextConsume
#异步消费消息模式下消费失败重试策略：-1,不重复，直接放入死信队列0,broker 控制重试策略>0,client 控制重试策略默认值: 0.
#suspendCurrentQueueTimeMillis
#同步消费消息模式下消费失败后再次消费的时间间隔。默认值: 1000.

### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
xxl.job.admin.addresses=http://127.0.0.1:8080/xxl-job-admin

### xxl-job, access token
xxl.job.accessToken=

### xxl-job executor appname
xxl.job.executor.appname=example-order
### xxl-job executor registry-address: default use address to registry , otherwise use ip:port if address is null
xxl.job.executor.address=
### xxl-job executor server-info
xxl.job.executor.ip=
xxl.job.executor.port=9999
### xxl-job executor log-path
xxl.job.executor.logpath=/Users/tangmyi/Downloads/xxl-job/jobhandler
### xxl-job executor log-retention-days
xxl.job.executor.logretentiondays=30
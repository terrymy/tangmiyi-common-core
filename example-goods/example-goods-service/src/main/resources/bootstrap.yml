spring:
  application:
    name: example-goods
  profiles:
    active: @app.active@
  cloud:
    config:
      label: master
      uri: http://localhost:8000 #配置中心服务（1/3）
      name: ${spring.application.name}
      profile: ${spring.profiles.active}

  datasource:
    url: jdbc:mysql://${example.goods.host}/tangmiyi_configserver?useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${example.goods.username}
    password: ${example.goods.password}
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driverClassName: com.mysql.jdbc.Driver
      #连接池的配置信息
      initialSize: 20 #初始化提供的连接数
      minIdle: 20 #数据库连接池的最小维持连接数
      maxActive: 200 #最大的连接数
      maxWait: 7000 #等待连接获取的最大超时时间
      timeBetweenEvictionRunsMillis: 60000 #间隔多久进行一次检测，检测需要关闭的空闲连接
      minEvictableIdleTimeMillis: 300000 #一个连接在池中最小生存的时间
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
  messages:
    encoding: utf-8
    basename: i18n/messages

hystrix:
  threadpool:
    default:
      coreSize: 100 #并发执行的最大线程数，默认10
      maxQueueSize: 200 #BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 40 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 10000 #断路器超时时间，默认1000ms
          strategy: THREAD

feign:
  hystrix:
    enabled: true

ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 5000
  MaxAutoRetries: 3
  MaxAutoRetriesNextServer: 3
  OkToRetryOnAllOperations: true

#端点信息监控
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
  info:
    git:
      mode: full
  health:
    db:
      enabled: false
    redis:
      enabled: false
    mail:
      enabled: false
    ldap:
      enabled: false

#  server:
#    port: 12016